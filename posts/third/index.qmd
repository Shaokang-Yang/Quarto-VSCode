---
title: "third"
author: "Shaokang Yang"
date: "2023-09-22"
categories: [news]
execute:
  echo: false
jupyter: python3
---

This is the first post in a Quarto blog. Welcome!

![](thumbnail.jpg)

Since this post doesn't specify an explicit `image`, the first image in the post will be used in the listing page of posts.

``` {python}
#| echo: true
1+1
```

```{python}
#| echo: true
#| warning: false
import time;import pandas as pd;import numpy as np ;import datetime
from datetime import datetime;from datetime import timedelta
import sqlite3
SEDD = pd.read_csv("/Users/shaokangyang/Library/CloudStorage/GoogleDrive-shaokang@vt.edu/My Drive/NetHCUP/Data/FL_SEDD_2020_CORE.csv")
```

``` {python}
#| echo: true
#| warning: false
import plotly.express as px;import requests
# Download the GeoJSON file
url = 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties_geojson = requests.get(url).json()
# Load your dataset
df = SEDD
# Convert FIPS codes to strings, remove decimal points, and format as 5-digit codes
df['PSTCO'] = df['PSTCO'].astype(str)
df['PSTCO'] = df['PSTCO'].apply(lambda x: x.split('.')[0])  # Remove decimal point
df['PSTCO'] = df['PSTCO'].apply(lambda x: x.zfill(5))       # Ensure 5 digits
# Count observations per FIPS code
observation_counts = df['PSTCO'].value_counts().reset_index()
observation_counts.columns = ['PSTCO', 'Observations']
# Create the choropleth map
fig = px.choropleth_mapbox(observation_counts, 
                           geojson=counties_geojson, 
                           locations='PSTCO', 
                           color='Observations',
                           color_continuous_scale=px.colors.sequential.Blues, # Sequential color scale
                           mapbox_style="carto-positron",
                           zoom=5, center = {"lat": 27.9944024, "lon": -81.7602544},  # Coordinates for Florida
                           opacity=0.5)
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
# Adjust the figure size
fig.update_layout(width=1000, height=600)
# Show the figure
fig.show()
```

```{python}
#| echo: true

import matplotlib.pyplot as plt
plt.plot([1,2,3,4])
plt.show()
```